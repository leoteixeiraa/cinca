{"version":3,"file":"image-uploader.component.d.ts","sources":["/home/leonardo/√Årea de Trabalho/cinca/node_modules/ngx-image-uploader/lib/image-uploader.component.d.ts"],"sourcesContent":["import { OnInit, OnDestroy, AfterViewChecked, ElementRef, Renderer, EventEmitter, ChangeDetectorRef } from '@angular/core';\r\nimport { ControlValueAccessor } from '@angular/forms';\r\nimport Cropper from 'cropperjs';\r\nimport { ImageUploaderService } from './image-uploader.service';\r\nimport { ImageUploaderOptions } from './interfaces';\r\nimport { FileQueueObject } from './file-queue-object';\r\nexport declare enum Status {\r\n    NotSelected = 0,\r\n    Selected = 1,\r\n    Uploading = 2,\r\n    Loading = 3,\r\n    Loaded = 4,\r\n    Error = 5,\r\n}\r\nexport declare class ImageUploaderComponent implements OnInit, OnDestroy, AfterViewChecked, ControlValueAccessor {\r\n    private renderer;\r\n    private uploader;\r\n    private changeDetector;\r\n    statusEnum: typeof Status;\r\n    _status: Status;\r\n    thumbnailWidth: number;\r\n    thumbnailHeight: number;\r\n    _imageThumbnail: any;\r\n    _errorMessage: string;\r\n    progress: number;\r\n    origImageWidth: number;\r\n    orgiImageHeight: number;\r\n    cropper: Cropper;\r\n    fileToUpload: File;\r\n    imageElement: ElementRef;\r\n    fileInputElement: ElementRef;\r\n    dragOverlayElement: ElementRef;\r\n    options: ImageUploaderOptions;\r\n    upload: EventEmitter<FileQueueObject>;\r\n    statusChange: EventEmitter<Status>;\r\n    propagateChange: (_: any) => void;\r\n    constructor(renderer: Renderer, uploader: ImageUploaderService, changeDetector: ChangeDetectorRef);\r\n    imageThumbnail: any;\r\n    errorMessage: string;\r\n    status: Status;\r\n    writeValue(value: any): void;\r\n    registerOnChange(fn: (_: any) => void): void;\r\n    registerOnTouched(): void;\r\n    ngOnInit(): void;\r\n    ngAfterViewChecked(): void;\r\n    ngOnDestroy(): void;\r\n    loadAndResize(url: string): void;\r\n    onImageClicked(): void;\r\n    onFileChanged(): void;\r\n    validateAndUpload(file: File): void;\r\n    uploadImage(): void;\r\n    removeImage(): void;\r\n    dismissError(): void;\r\n    drop(e: DragEvent): void;\r\n    dragenter(e: DragEvent): void;\r\n    dragover(e: DragEvent): void;\r\n    dragleave(e: DragEvent): void;\r\n    private updateDragOverlayStyles(isDragOver);\r\n    private resize(result);\r\n    private getType(dataUrl);\r\n    private fileToDataURL(file, result);\r\n}\r\n"],"names":[],"mappings":"AAAA;;;;;;;AAMA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuDA;"}